#! /usr/bin/env ruby

base_images = {
  nil => "buildpack-deps:buster",
  "slim" => "debian:buster-slim",
}

common_pre_install = <<~EOF
  ENV LANG C.UTF-8
EOF

base_image_pre_install = {
  "slim" => <<~EOF,
    RUN set -eux ;\\
        apt-get update ;\\
        apt-get install -y --no-install-recommends \\
		ca-certificates \\
                gcc \\
		libssl-dev \\
                libz-dev \\
                make \\
                tar \\
                wget \\
        ; \\
        rm -rf /var/lib/apt/lists/*
  EOF
}

common_post_install = <<~EOF
  # don't create ".bundle" in all our apps
  ENV GEM_HOME /usr/local/bundle
  ENV BUNDLE_SILENCE_ROOT_WARNING=1 \\
      BUNDLE_APP_CONFIG="$GEM_HOME"
  ENV PATH $GEM_HOME/bin:$PATH

  # adjust permissions of a few directories for running "gem install" as an arbitrary user
  RUN mkdir -p "$GEM_HOME" && chmod 777 "$GEM_HOME"

  CMD [ "irb" ]
EOF

install_commands = {
  "stable" => <<~EOF,
    ARG TRUFFLERUBY_VERSION

    RUN set -eux ;\\
        wget -q https://github.com/oracle/truffleruby/releases/download/vm-$TRUFFLERUBY_VERSION/truffleruby-$TRUFFLERUBY_VERSION-linux-amd64.tar.gz ;\\
        tar -xzf truffleruby-$TRUFFLERUBY_VERSION-linux-amd64.tar.gz -C /usr/local --strip-components=1 ;\\
        rm truffleruby-$TRUFFLERUBY_VERSION-linux-amd64.tar.gz ;\\
        /usr/local/lib/truffle/post_install_hook.sh ;\\
        ruby --version ;\\
        gem --version ;\\
        bundle --version
  EOF
  "nightly" => <<~EOF,
    RUN set -eux ;\\
        wget -q https://github.com/ruby/truffleruby-dev-builder/releases/latest/download/truffleruby-head-ubuntu-20.04.tar.gz ;\\
        tar -xzf truffleruby-head-ubuntu-20.04.tar.gz -C /usr/local --strip-components=1 ;\\
        rm truffleruby-head-ubuntu-20.04.tar.gz ;\\
        /usr/local/lib/truffle/post_install_hook.sh ;\\
        ruby --version ;\\
        gem --version ;\\
        bundle --version
  EOF
}

def write_section(io, string, blank_line: true)
  return if string.nil?
  io.puts string
  io.puts if blank_line
end

["stable", "nightly"].each do |truffle_flavor|
  [nil, "slim"].each do |image_base|
    dockerfile_name = "%s.dockerfile" % [truffle_flavor, image_base].compact.join("-")
    dockerfile_path = File.join(__dir__, dockerfile_name)
    puts "writing to #{dockerfile_path} ..."

    File.open(dockerfile_path, "w") do |dockerfile|
      write_section dockerfile, "FROM #{base_images[image_base]}"
      write_section dockerfile, common_pre_install
      write_section dockerfile, base_image_pre_install[image_base]
      write_section dockerfile, install_commands[truffle_flavor]
      write_section dockerfile, common_post_install, blank_line: false
    end
  end
end
