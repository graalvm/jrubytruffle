slow:Process.spawn returns the process ID of the new process as a Fixnum
slow:Process.spawn returns immediately
slow:Process.spawn sets environment variables in the child environment
slow:Process.spawn unsets environment variables whose value is nil
slow:Process.spawn calls #to_hash to convert the environment
slow:Process.spawn calls #to_str to convert the environment keys
slow:Process.spawn calls #to_str to convert the environment values
slow:Process.spawn raises an ArgumentError if an environment key includes an equals sign
slow:Process.spawn raises an ArgumentError if an environment key includes a null byte
slow:Process.spawn raises an ArgumentError if an environment value includes a null byte
slow:Process.spawn unsets other environment variables when given a true :unsetenv_others option
slow:Process.spawn unsets other environment variables when given a non-false :unsetenv_others option
slow:Process.spawn does not unset other environment variables when given a false :unsetenv_others option
slow:Process.spawn does not unset other environment variables when given a nil :unsetenv_others option
slow:Process.spawn does not unset environment variables included in the environment hash
slow:Process.spawn joins the current process group by default
slow:Process.spawn joins the current process if pgroup: false
slow:Process.spawn joins the current process if pgroup: nil
slow:Process.spawn joins a new process group if pgroup: true
slow:Process.spawn joins a new process group if pgroup: 0
slow:Process.spawn joins the specified process group if pgroup: pgid
slow:Process.spawn uses the current working directory as its working directory
slow:Process.spawn uses the current umask by default
slow:Process.spawn sets the umask if given the :umask option
slow:Process.spawn redirects STDOUT to the given file descriptior if out: Fixnum
slow:Process.spawn redirects STDOUT to the given file if out: IO
slow:Process.spawn redirects STDOUT to the given file if out: String
slow:Process.spawn redirects STDOUT to the given file if out: [String name, String mode]
slow:Process.spawn redirects STDERR to the given file descriptior if err: Fixnum
slow:Process.spawn redirects STDERR to the given file descriptor if err: IO
slow:Process.spawn redirects STDERR to the given file if err: String
slow:Process.spawn redirects STDERR to child STDOUT if :err => [:child, :out]
slow:Process.spawn redirects both STDERR and STDOUT to the given file descriptior
slow:Process.spawn redirects both STDERR and STDOUT to the given IO
slow:Process.spawn does NOT redirect both STDERR and STDOUT at the time to the given name
slow:Process.spawn when passed :chdir changes to the directory passed for :chdir
slow:Process.spawn when passed :chdir calls #to_path to convert the :chdir value
slow:Process.spawn when passed close_others: true closes file descriptors >= 3 in the child process
slow:Process.spawn when passed close_others: true does not close STDIN
slow:Process.spawn when passed close_others: true does not close STDOUT
slow:Process.spawn when passed close_others: true does not close STDERR
slow:Process.spawn when passed close_others: false closes file descriptors >= 3 in the child process because they are set close_on_exec by default
slow:Process.spawn when passed close_others: false does not close file descriptors >= 3 in the child process if fds are set close_on_exec=false
slow:Process.spawn when passed close_others: false does not close STDIN
slow:Process.spawn when passed close_others: false does not close STDOUT
slow:Process.spawn when passed close_others: false does not close STDERR
slow:Process.spawn with Integer option keys maps the key to a file descriptor in the child that inherits the file descriptor from the parent specified by the value
