fails:Pattern matching extends case expression with case/in construction
fails:Pattern matching allows using then operator
fails:Pattern matching binds variables
fails:Pattern matching cannot mix in and when operators
fails:Pattern matching checks patterns until the first matching
fails:Pattern matching executes else clause if no pattern matches
fails:Pattern matching raises NoMatchingPatternError if no pattern matches and no else clause
fails:Pattern matching guards supports if guard
fails:Pattern matching guards supports unless guard
fails:Pattern matching guards makes bound variables visible in guard
fails:Pattern matching guards does not evaluate guard if pattern does not match
fails:Pattern matching guards takes guards into account when there are several matching patterns
fails:Pattern matching guards executes else clause if no guarded pattern matches
fails:Pattern matching guards raises NoMatchingPatternError if no guarded pattern matches and no else clause
fails:Pattern matching value pattern matches an object such that pattern === object
fails:Pattern matching value pattern allows string literal with interpolation
fails:Pattern matching variable pattern matches a value and binds variable name to this value
fails:Pattern matching variable pattern makes bounded variable visible outside a case statement scope
fails:Pattern matching variable pattern create local variables even if a pattern doesn't match
fails:Pattern matching variable pattern allow using _ name to drop values
fails:Pattern matching variable pattern supports using _ in a pattern several times
fails:Pattern matching variable pattern supports using any name with _ at the beginning in a pattern several times
fails:Pattern matching variable pattern does not support using variable name (except _) several times
fails:Pattern matching variable pattern supports existing variables in a pattern specified with ^ operator
fails:Pattern matching variable pattern allows applying ^ operator to bound variables
fails:Pattern matching variable pattern requires bound variable to be specified in a pattern before ^ operator when it relies on a bound variable
fails:Pattern matching alternative pattern matches if any of patterns matches
fails:Pattern matching alternative pattern does not support variable binding
fails:Pattern matching alternative pattern support underscore prefixed variables in alternation
fails:Pattern matching AS pattern binds a variable to a value if pattern matches
fails:Pattern matching AS pattern can be used as a nested pattern
fails:Pattern matching Array pattern supports form Constant(pat, pat, ...)
fails:Pattern matching Array pattern supports form Constant[pat, pat, ...]
fails:Pattern matching Array pattern supports form [pat, pat, ...]
fails:Pattern matching Array pattern supports form pat, pat, ...
fails:Pattern matching Array pattern matches an object with #deconstruct method which returns an array and each element in array matches element in pattern
fails:Pattern matching Array pattern does not match object if Constant === object returns false
fails:Pattern matching Array pattern does not match object without #deconstruct method
fails:Pattern matching Array pattern raises TypeError if #deconstruct method does not return array
fails:Pattern matching Array pattern does not match object if elements of array returned by #deconstruct method does not match elements in pattern
fails:Pattern matching Array pattern binds variables
fails:Pattern matching Array pattern supports splat operator *rest
fails:Pattern matching Array pattern does not match partially by default
fails:Pattern matching Array pattern does match partially from the array beginning if list + , syntax used
fails:Pattern matching Array pattern matches [] with []
fails:Pattern matching Array pattern matches anything with *
fails:Pattern matching Hash pattern supports form Constant(id: pat, id: pat, ...)
fails:Pattern matching Hash pattern supports form Constant[id: pat, id: pat, ...]
fails:Pattern matching Hash pattern supports form {id: pat, id: pat, ...}
fails:Pattern matching Hash pattern supports form id: pat, id: pat, ...
fails:Pattern matching Hash pattern supports a: which means a: a
fails:Pattern matching Hash pattern can mix key (a:) and key-value (a: b) declarations
fails:Pattern matching Hash pattern supports 'string': key literal
fails:Pattern matching Hash pattern does not support string interpolation in keys
fails:Pattern matching Hash pattern raise SyntaxError when keys duplicate in pattern
fails:Pattern matching Hash pattern matches an object with #deconstruct_keys method which returns a Hash with equal keys and each value in Hash matches value in pattern
fails:Pattern matching Hash pattern does not match object if Constant === object returns false
fails:Pattern matching Hash pattern does not match object without #deconstruct_keys method
fails:Pattern matching Hash pattern does not match object if #deconstruct_keys method does not return Hash
fails:Pattern matching Hash pattern does not match object if #deconstruct_keys method returns Hash with non-symbol keys
fails:Pattern matching Hash pattern does not match object if elements of Hash returned by #deconstruct_keys method does not match values in pattern
fails:Pattern matching Hash pattern passes keys specified in pattern as arguments to #deconstruct_keys method
fails:Pattern matching Hash pattern passes keys specified in pattern to #deconstruct_keys method if pattern contains double splat operator **
fails:Pattern matching Hash pattern passes nil to #deconstruct_keys method if pattern contains double splat operator **rest
fails:Pattern matching Hash pattern binds variables
fails:Pattern matching Hash pattern supports double splat operator **rest
fails:Pattern matching Hash pattern treats **nil like there should not be any other keys in a matched Hash
fails:Pattern matching Hash pattern can match partially
fails:Pattern matching Hash pattern matches {} with {}
fails:Pattern matching Hash pattern matches anything with **
fails:Pattern matching refinements are used for #deconstruct
fails:Pattern matching refinements are used for #deconstruct_keys
fails:Pattern matching refinements are used for #=== in constant pattern
fails:Pattern matching warning warns about pattern matching is experimental feature
